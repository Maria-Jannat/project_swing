package final_project_for_module_six.designView;

import final_project_for_module_six.connection.DatabaseConnection;
import final_project_for_module_six.utils.DashboardMenu;
import final_project_for_module_six.pojo.Employee;
import final_project_for_module_six.pojo.Meeting;
import final_project_for_module_six.pojo.Office;
import final_project_for_module_six.pojo.OfficeType;
import final_project_for_module_six.service.CommonService;
import final_project_for_module_six.service.CommonServiceAdapter;
import final_project_for_module_six.serviceImplementation.EmployeeServiceImplementation;
import final_project_for_module_six.serviceImplementation.MeetingServiceImplementation;
import final_project_for_module_six.serviceImplementation.OfficeServiceImplementation;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author user
 */
public class MeetingView extends javax.swing.JFrame {

    /**
     * Creates new form Design
     */
    public MeetingView() {
        initComponents();
        displayAttendeesNameToList();
        displayCalledByEmployeeToComboBox();
        displayOfficeNameToComboBox();
        displayDataIntoTable();
        setJMenuBar(DashboardMenu.displayMenu(this));
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    CommonService commonService = new MeetingServiceImplementation();
    CommonServiceAdapter meetingService = new MeetingServiceImplementation();
    CommonServiceAdapter emoloyeeService = new EmployeeServiceImplementation();
    CommonServiceAdapter officeService = new OfficeServiceImplementation();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        selectTime = new cambodia.raven.Time();
        createdTime = new cambodia.raven.Time();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        btnClearForm = new javax.swing.JButton();
        btnClearTable = new javax.swing.JButton();
        btnDeleteData = new javax.swing.JButton();
        btnEditData = new javax.swing.JButton();
        btnShowDataFromFile = new javax.swing.JButton();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSetMeeting = new javax.swing.JButton();
        txtMeetingId = new javax.swing.JTextField();
        cmbMeetingAgenda = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbMeetingPlace = new javax.swing.JComboBox<>();
        cmbCalledBy = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cmbOfficeName = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtSetTime = new javax.swing.JTextField();
        btnSetMeetingTime = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        rbUpcoming = new javax.swing.JRadioButton();
        rbCompleted = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        rbCanceled = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        cmbMeetingDuration = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtShowDateTime = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        listAttendees = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaMeetingDetails = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        selectTime.setBackground(new java.awt.Color(102, 0, 51));
        selectTime.setTextRefernce(txtSetTime);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 51));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 0, 51), 6, true));

        kGradientPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51)));
        kGradientPanel1.setkEndColor(new java.awt.Color(102, 0, 51));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 0, 51));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel12.setText("<html> <b>MJ's</b> Meeting Management System & Technology");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Simultaneously we set colossal difference");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 1252, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51)));
        kGradientPanel2.setkEndColor(new java.awt.Color(102, 0, 51));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 0, 51));

        btnClearForm.setBackground(new java.awt.Color(102, 0, 51));
        btnClearForm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClearForm.setForeground(new java.awt.Color(255, 255, 255));
        btnClearForm.setText("Clear Data From Registration Form");
        btnClearForm.setPreferredSize(new java.awt.Dimension(230, 35));
        btnClearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFormActionPerformed(evt);
            }
        });

        btnClearTable.setBackground(new java.awt.Color(102, 0, 51));
        btnClearTable.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClearTable.setForeground(new java.awt.Color(255, 255, 255));
        btnClearTable.setText("Clear Data From Table");
        btnClearTable.setPreferredSize(new java.awt.Dimension(230, 35));
        btnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTableActionPerformed(evt);
            }
        });

        btnDeleteData.setBackground(new java.awt.Color(102, 0, 51));
        btnDeleteData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDeleteData.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteData.setText("Delete Data");
        btnDeleteData.setPreferredSize(new java.awt.Dimension(230, 35));
        btnDeleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDataActionPerformed(evt);
            }
        });

        btnEditData.setBackground(new java.awt.Color(102, 0, 51));
        btnEditData.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEditData.setForeground(new java.awt.Color(255, 255, 255));
        btnEditData.setText("Update Data");
        btnEditData.setPreferredSize(new java.awt.Dimension(230, 35));
        btnEditData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDataActionPerformed(evt);
            }
        });

        btnShowDataFromFile.setBackground(new java.awt.Color(102, 0, 51));
        btnShowDataFromFile.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnShowDataFromFile.setForeground(new java.awt.Color(255, 255, 255));
        btnShowDataFromFile.setText("Show Data From Database");
        btnShowDataFromFile.setPreferredSize(new java.awt.Dimension(230, 35));
        btnShowDataFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDataFromFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClearForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteData, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShowDataFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowDataFromFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        kGradientPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51)));
        kGradientPanel3.setkEndColor(new java.awt.Color(102, 0, 51));
        kGradientPanel3.setkStartColor(new java.awt.Color(102, 0, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Set The Meeting:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Id");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Agenda");

        btnSetMeeting.setBackground(new java.awt.Color(102, 0, 51));
        btnSetMeeting.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSetMeeting.setForeground(new java.awt.Color(255, 255, 255));
        btnSetMeeting.setText("Set Meeting");
        btnSetMeeting.setPreferredSize(new java.awt.Dimension(250, 35));
        btnSetMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetMeetingActionPerformed(evt);
            }
        });

        txtMeetingId.setEditable(false);
        txtMeetingId.setPreferredSize(new java.awt.Dimension(250, 26));

        cmbMeetingAgenda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select:", "Awarness on Burning Issues", "Target and Budget Issue", "Project Check-in Meeting", "Formal meeting", "Internal Team Meeting", "Findings and Feedback", "Annual Conference" }));
        cmbMeetingAgenda.setPreferredSize(new java.awt.Dimension(250, 26));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Place");

        cmbMeetingPlace.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select:", "Board Meeting Room", "Conference Room", "Delta Room", "Alpha Meeting Room" }));
        cmbMeetingPlace.setPreferredSize(new java.awt.Dimension(250, 26));

        cmbCalledBy.setPreferredSize(new java.awt.Dimension(250, 26));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Called By");

        cmbOfficeName.setPreferredSize(new java.awt.Dimension(250, 26));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Office Name");

        jDateChooser.setPreferredSize(new java.awt.Dimension(250, 26));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Set Meeting Date");

        btnSetMeetingTime.setText("...");
        btnSetMeetingTime.setPreferredSize(new java.awt.Dimension(47, 25));
        btnSetMeetingTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetMeetingTimeActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Set Meeting Time");

        rbUpcoming.setBackground(new java.awt.Color(102, 0, 51));
        buttonGroup3.add(rbUpcoming);
        rbUpcoming.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbUpcoming.setForeground(new java.awt.Color(255, 255, 255));
        rbUpcoming.setText("Upcoming");

        rbCompleted.setBackground(new java.awt.Color(102, 0, 51));
        buttonGroup3.add(rbCompleted);
        rbCompleted.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbCompleted.setForeground(new java.awt.Color(255, 255, 255));
        rbCompleted.setText("Completed");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Meeting Status");

        rbCanceled.setBackground(new java.awt.Color(102, 0, 51));
        buttonGroup3.add(rbCanceled);
        rbCanceled.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbCanceled.setForeground(new java.awt.Color(255, 255, 255));
        rbCanceled.setText("Canceled");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Meeting Created Time");

        cmbMeetingDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select:", "Around 1 hour", "Around 2 hours", "Around 3 hours", "Around 4 hours", "Around 5 hours" }));
        cmbMeetingDuration.setPreferredSize(new java.awt.Dimension(250, 26));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Meeting Duration");

        txtShowDateTime.setPreferredSize(new java.awt.Dimension(250, 25));

        jScrollPane4.setViewportView(listAttendees);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Attendees");

        textAreaMeetingDetails.setColumns(20);
        textAreaMeetingDetails.setRows(5);
        jScrollPane3.setViewportView(textAreaMeetingDetails);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Details");

        kGradientPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51), new java.awt.Color(102, 0, 51)));
        kGradientPanel4.setkEndColor(new java.awt.Color(102, 0, 51));
        kGradientPanel4.setkStartColor(new java.awt.Color(0, 0, 51));

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meeting Id", "Agenda", "Details", "Place", "Attendees", "Called By", "Office Name", "Set Date", "Set Time", "Duration", "Status", "Created Time"
            }
        ));
        tblDisplay.setSelectionBackground(new java.awt.Color(102, 0, 51));
        tblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplay);

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                        .addGap(6, 6, 6)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addComponent(rbUpcoming)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbCompleted)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbCanceled))
                            .addComponent(cmbMeetingDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                    .addComponent(txtSetTime, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(5, 5, 5)
                                    .addComponent(btnSetMeetingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(8, 8, 8))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtShowDateTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSetMeeting, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(cmbMeetingPlace, javax.swing.GroupLayout.Alignment.LEADING, 0, 251, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbMeetingAgenda, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMeetingId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cmbCalledBy, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbOfficeName, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMeetingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMeetingAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMeetingPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCalledBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(1, 1, 1)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbOfficeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(1, 1, 1)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSetTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSetMeetingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMeetingDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbUpcoming)
                            .addComponent(rbCompleted)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbCanceled))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtShowDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSetMeeting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1295, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void displayCalledByEmployeeToComboBox() {

        cmbCalledBy.addItem("Please Select:");
        List<Employee> list = emoloyeeService.getList();
        for (Employee em : list) {
            cmbCalledBy.addItem(em.getEmployeeName());
        }
    }

    public void displayOfficeNameToComboBox() {

        cmbOfficeName.addItem("Please Select:");
        List<Office> list = officeService.getList();
        for (Office o : list) {
            cmbOfficeName.addItem(o.getOfficeName());
        }
    }

    public void displayAttendeesNameToList() {

        DefaultListModel dlm = new DefaultListModel();
        List<Employee> list = emoloyeeService.getList();
        for (Employee ae : list) {
            dlm.addElement(ae.getEmployeeName());
        }
        listAttendees.setModel(dlm);
    }

    public void clear() {
        txtMeetingId.setText(null);
        cmbMeetingAgenda.setSelectedIndex(0);
        textAreaMeetingDetails.setText(null);
        cmbMeetingPlace.setSelectedIndex(0);
//        listAttendees.setModel(new DefaultListModel());
        cmbCalledBy.setSelectedIndex(0);
        cmbOfficeName.setSelectedIndex(0);
        jDateChooser.setDate(null);
        txtSetTime.setText(null);
        cmbMeetingDuration.setSelectedIndex(0);
        buttonGroup3.clearSelection();
        txtShowDateTime.setText(null);
    }

    public void displayDataIntoTable() {
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);
        Object[] row = new Object[12];
        List<Meeting> list = commonService.getList();
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMeetingId();
            row[1] = list.get(i).getMeetingAgenda();
            row[2] = list.get(i).getDetails();
            row[3] = list.get(i).getMeetinPlace();

            row[4] = list.get(i).getAttendees();

            Employee calledBy = (Employee) emoloyeeService.get(list.get(i).getCalledBy().getEmployeeId());
            row[5] = calledBy.getEmployeeName();

            Office office = (Office) officeService.get(list.get(i).getOfficeName().getOfficeId());
            row[6] = office.getOfficeName();

            row[7] = list.get(i).getSetMeetingDate();
            row[8] = list.get(i).getSetMeetingTime();
            row[9] = list.get(i).getMeetingDuration();
            row[10] = list.get(i).getMeetingStatus();
            row[11] = list.get(i).getMeetingCreatedDateTime();
            model.addRow(row);
        }
    }

    private void btnSetMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetMeetingActionPerformed

        String agenda = cmbMeetingAgenda.getSelectedItem().toString();
        String details = textAreaMeetingDetails.getText().trim();
        String place = cmbMeetingPlace.getSelectedItem().toString();

        String attendees = listAttendees.getSelectedValuesList().toString();
        Employee attendeesEmployees = (Employee) emoloyeeService.getByName(attendees);

        String seniorEmployee = cmbCalledBy.getSelectedItem().toString();
        Employee calledBy = (Employee) emoloyeeService.getByName(seniorEmployee);

        String office = cmbOfficeName.getSelectedItem().toString();
        Office offices = (Office) officeService.getByName(office);

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
        String setDate = sdf.format(jDateChooser.getDate());

        String setTime = txtSetTime.getText().trim();
        String duration = cmbMeetingDuration.getSelectedItem().toString();

        String meetingStatus = null;
        if (rbUpcoming.isSelected()) {
            meetingStatus = rbUpcoming.getText().trim();
        }

        if (rbCompleted.isSelected()) {
            meetingStatus = rbCompleted.getText().trim();
        }
        if (rbCanceled.isSelected()) {
            meetingStatus = rbCanceled.getText().trim();
        }

        //////////// validation started/////////////
        if (agenda.equalsIgnoreCase("Please Select:")) {
            JOptionPane.showMessageDialog(rootPane, "Enter Meeting Agenda");
        } else if (details.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter the Details of the Meeting");
        } else if (details.length() < 11) {
            JOptionPane.showMessageDialog(rootPane, "Enter at Least 10 Characters");
        } else if (place.equalsIgnoreCase("Please Select:")) {
            JOptionPane.showMessageDialog(rootPane, "Select the Meeting Place");
//        } else if (attendees.isEmpty()) {
//            JOptionPane.showMessageDialog(rootPane, "Select the Nemes of the Attendees");
        } else if (seniorEmployee.equalsIgnoreCase("Please Select:")) {
            JOptionPane.showMessageDialog(rootPane, "Select the Name of the Caller");
        } else if (office.equalsIgnoreCase("Please Select:")) {
            JOptionPane.showMessageDialog(rootPane, "Select the Name of the Office");
//        } else if (setDate == null) {
//            JOptionPane.showMessageDialog(rootPane, "Enter the Date of the Meeting");
//        } else if (setTime.isEmpty()) {
//            JOptionPane.showMessageDialog(rootPane, "Enter the Time of the Meeting");
        } else if (duration.equalsIgnoreCase("Please Select:")) {
            JOptionPane.showMessageDialog(rootPane, "Select the Duration of the Meeting");
        } else if (meetingStatus == null) {
            JOptionPane.showMessageDialog(rootPane, "Select the Meeting Status");
        } else {
            Meeting meeting = new Meeting(agenda, details, place, attendees, calledBy, offices, setDate, setTime, duration, meetingStatus, LocalDateTime.now());
            commonService.save(meeting);
            displayDataIntoTable();
            clear();
            JOptionPane.showMessageDialog(rootPane, "Data Successfully Inserted into Table...");
        }
    }//GEN-LAST:event_btnSetMeetingActionPerformed

    private void btnShowDataFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowDataFromFileActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
//        Utils.readDataFromFile("Project", model);

        try {
            Connection conn = DatabaseConnection.getInstance();
            PreparedStatement ps = conn.prepareStatement("select * from meeting");
            ResultSet rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                Object o[] = {rs.getInt("Meeting_Id"), rs.getString("Meeting_Agenda"), rs.getString("Meeting_Details"), rs.getString("Meeting_Place"),
                    rs.getString("Attendees"), rs.getInt("Called_By"), rs.getInt("Office_Name"), rs.getString("Set_Meeting_Date"),
                    rs.getString("Set_Meeting_Time"), rs.getString("Meeting_Duration"), rs.getString("Meeting_Status"), rs.getTimestamp("Meeting_Created_DateTime").toLocalDateTime()};
                model.addRow(o);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_btnShowDataFromFileActionPerformed

    private void btnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTableActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearTableActionPerformed

    private void tblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayMouseClicked

        TableModel model = tblDisplay.getModel();
        int i = tblDisplay.getSelectedRow();
        txtMeetingId.setText(String.valueOf(model.getValueAt(i, 0)));
        cmbMeetingAgenda.setSelectedItem(model.getValueAt(i, 1));
        textAreaMeetingDetails.setText(String.valueOf(model.getValueAt(i, 2)));
        cmbMeetingPlace.setSelectedItem(model.getValueAt(i, 3));

//        listAttendees.getSelectionModel().addListSelectionListener(tblDisplay);
//    ListSelectionModel cellSelectionModel = tblDisplay.getSelectionModel();
//    cellSelectionModel.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
//
//    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
//      public void valueChanged(ListSelectionEvent e) {
//        String selectedData = null;
//
//        int[] selectedRow = tblDisplay.getSelectedRows();
//        int[] selectedColumns = tblDisplay.getSelectedColumns();
//
//        for (int i = 0; i < selectedRow.length; i++) {
//          for (int j = 0; j < selectedColumns.length; j++) {
//              listAttendees.setSelectedItem(model.getValueAt(i, 3));
//            selectedData = (String) model.getValueAt(selectedRow[i], selectedColumns[j]);
//          }
//        }
//        System.out.println("Selected: " + selectedData);
//      }
//    });
        cmbCalledBy.setSelectedItem(model.getValueAt(i, 5));
        cmbOfficeName.setSelectedItem(model.getValueAt(i, 6));

        try {
            Date setMeetingDate = new SimpleDateFormat("dd-MMM-yyyy").parse((String) model.getValueAt(i, 7).toString());
            jDateChooser.setDate(setMeetingDate);
        } catch (ParseException ex) {
            Logger.getLogger(MeetingView.class.getName()).log(Level.SEVERE, null, ex);
        }

        txtSetTime.setText(String.valueOf(model.getValueAt(i, 8)));
        cmbMeetingDuration.setSelectedItem(model.getValueAt(i, 9));

        if (String.valueOf(model.getValueAt(i, 10)).equals("Upcoming")) {
            rbUpcoming.setSelected(true);
        }
        if (String.valueOf(model.getValueAt(i, 10)).equals("Completed")) {
            rbCompleted.setSelected(true);
        }
        if (String.valueOf(model.getValueAt(i, 10)).equals("Cancel")) {
            rbCanceled.setSelected(true);
        }

        txtShowDateTime.setText(String.valueOf(model.getValueAt(i, 11)));

    }//GEN-LAST:event_tblDisplayMouseClicked

    private void btnClearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFormActionPerformed
        clear();
    }//GEN-LAST:event_btnClearFormActionPerformed

    private void btnEditDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDataActionPerformed

        String attendees = listAttendees.getSelectedValuesList().toString();
        Employee attendeesEmployees = (Employee) emoloyeeService.getByName(attendees);
//             Integer.parseInt(txtMeetingId.getText().trim())
        String mid = txtMeetingId.getText().trim();
        String seniorEmployee = cmbCalledBy.getSelectedItem().toString();
        Employee calledBy = (Employee) emoloyeeService.getByName(seniorEmployee);

        String office = cmbOfficeName.getSelectedItem().toString();
        Office offices = (Office) officeService.getByName(office);

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
        String setDate = sdf.format(jDateChooser.getDate());

        String meetingStatus = null;
        if (rbUpcoming.isSelected()) {
            meetingStatus = rbUpcoming.getText().trim();
        } else if (rbCompleted.isSelected()) {
            meetingStatus = rbCompleted.getText().trim();
        } else {
            meetingStatus = rbCanceled.getText().trim();
        }

        Meeting meeting = new Meeting(Integer.parseInt(txtMeetingId.getText().trim()), cmbMeetingAgenda.getSelectedItem().toString(), textAreaMeetingDetails.getText().trim(), cmbMeetingPlace.getSelectedItem().toString(), attendees, calledBy, offices, setDate, txtSetTime.getText().trim(), cmbMeetingDuration.getSelectedItem().toString(), meetingStatus.toString(), LocalDateTime.now());
        commonService.update(meeting);
        displayDataIntoTable();
        clear();
        JOptionPane.showMessageDialog(rootPane, "Data Successfully Updated Into Table");
    }//GEN-LAST:event_btnEditDataActionPerformed

    private void btnDeleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDataActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(null, "Are you Sure?");
        if (i == 0) {
            commonService.delete(Integer.parseInt(txtMeetingId.getText().trim()));
            displayDataIntoTable();
            clear();
            JOptionPane.showMessageDialog(rootPane, "Succeessfully Deleted");
        }
    }//GEN-LAST:event_btnDeleteDataActionPerformed

    private void btnSetMeetingTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetMeetingTimeActionPerformed
        // TODO add your handling code here:
        selectTime.showPopup();
    }//GEN-LAST:event_btnSetMeetingTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OfficeType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OfficeType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OfficeType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OfficeType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeetingView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearForm;
    private javax.swing.JButton btnClearTable;
    private javax.swing.JButton btnDeleteData;
    private javax.swing.JButton btnEditData;
    private javax.swing.JButton btnSetMeeting;
    private javax.swing.JButton btnSetMeetingTime;
    private javax.swing.JButton btnShowDataFromFile;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cmbCalledBy;
    private javax.swing.JComboBox<String> cmbMeetingAgenda;
    private javax.swing.JComboBox<String> cmbMeetingDuration;
    private javax.swing.JComboBox<String> cmbMeetingPlace;
    private javax.swing.JComboBox<String> cmbOfficeName;
    private cambodia.raven.Time createdTime;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private javax.swing.JList<String> listAttendees;
    private javax.swing.JRadioButton rbCanceled;
    private javax.swing.JRadioButton rbCompleted;
    private javax.swing.JRadioButton rbUpcoming;
    private cambodia.raven.Time selectTime;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTextArea textAreaMeetingDetails;
    private javax.swing.JTextField txtMeetingId;
    private javax.swing.JTextField txtSetTime;
    private javax.swing.JTextField txtShowDateTime;
    // End of variables declaration//GEN-END:variables
}
